"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","f782b68328d268e27b51c550ff33845c"],["static/js/main.3a7c4ad6.js","19d961cf501e08d733fdbea97553b775"],["static/media/AboutSelfie.0ec768c8.png","0ec768c8f0ee5444d3973baa54b63fa1"],["static/media/Android-icon.b641b746.png","b641b74623e128719bf66314bdf24616"],["static/media/Angular-icon.3ccc7636.png","3ccc76361c9da9897119c412adb7c3cc"],["static/media/BRiN-Logo2.404cc222.png","404cc222c6d2bf461483482e041cf062"],["static/media/Bash-icon.0ccae9d4.png","0ccae9d4fef0f8184c0921c4b7f17d7f"],["static/media/Bitbucket-icon.e13b85af.png","e13b85af2e7183e8a3c95049e255dbd8"],["static/media/Git-icon.b2b121a0.png","b2b121a081f2c73e70f9fd3bd7332358"],["static/media/Github-icon.b9f5da75.png","b9f5da751b77a9329b846248d6a1b48c"],["static/media/HTML5-icon.169fe7a2.png","169fe7a2de7b228c7c372bea9b1222b3"],["static/media/ITC-Logo.dca187bb.png","dca187bbec7e36004c56e39ca9ccd658"],["static/media/JQuery-icon.df6ad532.png","df6ad5326d0dddac63243a01f6b34507"],["static/media/Java-icon.92844453.png","928444538f8a8d0819071abe09c4cde8"],["static/media/JavaScript-icon.0d8a2d5f.png","0d8a2d5f7a6a53d8ff77ea2d7118b6b6"],["static/media/LinkedIn-icon.a7213f00.png","a7213f0010e474436935bec3cb0317a8"],["static/media/MShipman_CV_2017.8b9ef69d.pdf","8b9ef69d4ff60afa116e650e463b08f8"],["static/media/Node-icon.56b6e003.png","56b6e003b209c78d65b654e976b3e646"],["static/media/Python-icon.bb7d9130.png","bb7d9130c4bedddb9093b952aab11981"],["static/media/React-icon.15691385.png","15691385d26a7630346bdc26a422bf9d"],["static/media/ShippyBot-icon.85ec53c4.png","85ec53c42e37e2157cd41d3d32a7f854"],["static/media/SourceTree-icon.71b4962e.png","71b4962e8530d56b0699579b0b792c63"],["static/media/Xcode-icon.8f03232d.png","8f03232d7414ffafda39bde6406a68e1"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,a){var c=new URL(e);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),c=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var a=new Request(n,{credentials:"same-origin"});return fetch(a).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(n);t||(n=addDirectoryIndex(n,"index.html"),t=urlsToCacheKeys.has(n));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(n=new URL("/profile/index.html",self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});